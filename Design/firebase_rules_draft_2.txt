
// Draft Two, with high scores per mode (story, mixed, wr, bc, lc)
// 
// 
// {
//   "rules": {
//     ".read": "auth != null",
//     ".write": "auth != null",
//   }
// }

{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    "high_scores": {
      ".read": "auth != null",
      ".write": "!data.exists() && auth != null",
      "individual": {
        "$uid": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid",
          "$mode": {
            ".validate": "$mode === 'story' || $mode === 'mixed' || $mode === 'wr' || $mode === 'bc' || $mode === 'lc'",
            "$difficulty": {
              ".validate": "$difficulty === 'easy' || $difficulty === 'medium' || $difficulty === 'hard' || $difficulty === 'beacon'",
              "$score": {
                ".validate": "$score.matches(/^[0-9]+$/) && newData.hasChildren([
                  'name',
                  'score',
                ])",
                "name": {
                  ".write": true,
                  ".validate": "newData.val().matches(/^[A-Z]{1,6}$/)",
                },
                "score": {
                  ".write": true,
                  ".validate": "newData.isNumber() && newData.val() % 1 === 0.0 && newData.val() >= 0",
                },
              },
            },
          },
        },
      },
      "global": {
        ".read": true,
        ".write": "auth != null",
        "$mode": {
          ".validate": "$mode === 'story' || $mode === 'mixed' || $mode === 'wr' || $mode === 'bc' || $mode === 'lc'",
          "$difficulty": {
            ".validate": "$difficulty === 'easy' || $difficulty === 'medium' || $difficulty === 'hard' || $difficulty === 'beacon'",
            "$score": {
              ".validate": "$score.matches(/^[0-9]+$/) && newData.hasChildren([
                'name',
                'score',
                'uid',
              ])",
              "name": {
                ".write": true,
                ".validate": "newData.val().matches(/^[A-Z]{1,6}$/)",
              },
              "score": {
                ".write": true,
                ".validate": "newData.isNumber() && newData.val() % 1 === 0.0 && newData.val() >= 0",
              },
              "uid": {
                ".write": true,
              },
            },
          },
        },
      },
    },
  }
}

